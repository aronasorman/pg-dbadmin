---
- hosts: original-db
  tasks:
    - name: move the new configuration file into the data folder
      copy: 
        src: postgresql.conf
        dest: /etc/postgresql/9.6/main/
        mode: 0600

    - name: add client authentication
      lineinfile:
        path: /etc/postgresql/9.6/main/pg_hba.conf
        line: 'host replication postgres    192.168.33.9/32   trust'

    - name: add client authentication (second)
      lineinfile:
        path: /etc/postgresql/9.6/main/pg_hba.conf
        line: 'host all postgres    192.168.33.9/32   trust'
 
    - name: change the hostname
      command: hostname pg

    - name: install pip
      command: aptitude install -y python-pip

    - name: install python-pexpect
      command: pip install pexpect

    - block: 
      - name: generate ssh keys
        expect: 
          command: ssh-keygen -t rsa
          responses:
            'Enter file in which to save the key \(/var/lib/postgresql/.ssh/id_rsa\):': "\n"
            'Enter passphrase \(empty for no passphrase\):': "\n"
            'Enter same passphrase again:': "\n"
            
      - name: config ssh
        file: 
          path: /var/lib/postgresql/.ssh/config
          state: touch

      - name: add to config
        lineinfile:
          path: /var/lib/postgresql/.ssh/config
          line: 'Host 192.168.33.9'

      - name: add another line
        lineinfile:
          path: /var/lib/postgresql/.ssh/config
          line: 'StrictHostKeyChecking no'
      become: true
      become_method: sudo
      become_user: postgres

    - name: fetch the public key to store in the local box
      fetch:
        src: /var/lib/postgresql/.ssh/id_rsa.pub
        dest: tmp

    - name: restart server
      service:
        name: postgresql
        state: restarted

    - name: reload configuration files
      service:
        name: postgresql
        state: reloaded

- hosts: standby
  tasks: 
    - name: change host name
      command: hostname standby
    
    - name: create .ssh folder
      file:
        path: /var/lib/postgresql/.ssh
        state: directory
        owner: postgres
        group: postgres
        mode: 0700

    - name: copy barman public key into authorized_keys
      copy:
        src: tmp/machine1/var/lib/barman/.ssh/id_rsa.pub
        dest: /var/lib/postgresql/.ssh/authorized_keys
        mode: 0600
      become: true
      become_method: sudo
      become_user: postgres 

    - name: stop service
      service:
        name: postgresql
        state: stopped